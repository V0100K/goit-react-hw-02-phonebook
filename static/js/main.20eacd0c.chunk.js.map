{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","id","v4","findByName","contactName","props","contacts","some","handleSubmit","preventDefault","toLowerCase","alert","onSubmit","reset","this","className","s","form","type","pattern","title","required","onChange","Component","ContactListItem","onDeletContact","contactListItem","contact","buttonDelete","onClick","ContactList","list","map","Filter","filter","App","deleteContact","contactId","prevState","formSubmitHandler","changeFilter","getVisibleContacts","normalizedFilter","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20eacd0c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__2WTgY\",\"contact\":\"ContactListItem_contact__ZyfBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2vCAF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1yC4O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2WbE5\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 } from \"uuid\";\nimport s from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    contacts: PropTypes.array.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ id: v4(), [name]: value });\n  };\n\n  findByName = (contactName) => {\n    return this.props.contacts.some(({ name }) => name === contactName);\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { name } = this.state;\n\n    if (this.findByName(name) || name === name.toLowerCase()) {\n      alert(`${name} is already in contacts!!!!!!!!!!!!!!!`);\n      return;\n    }\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label>\n          <h2>Name</h2>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <h2>Number</h2>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactListItem.module.css\";\n\nconst ContactListItem = ({ name, number, id, onDeletContact }) => (\n  <li className={s.contactListItem}>\n    <p className={s.contact}>\n        {''}\n      {name}: {number}\n    </p>\n    <button\n      className={s.buttonDelete}\n      type=\"button\"\n      onClick={() => onDeletContact(id)}\n    >\n      Delete\n    </button>\n  </li>\n);\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeletContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDeletContact }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <ContactListItem\n        key={id}\n        id={id}\n        name={name}\n        number={number}\n        onDeletContact={onDeletContact}\n      />\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeletContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={s.filter}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  formSubmitHandler = ({ id, name, number }) => {\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, { id, name, number }],\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm contacts={contacts} onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onChange={this.changeFilter}\n          onDeletContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}